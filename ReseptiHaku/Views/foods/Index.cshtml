@model PagedList.IPagedList<ReseptiHaku.Models.food>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

@section scripts {
    <script type="text/javascript">
        $("#singleSelectedTHSCODE").on("change", function () {
            //Getting Value
            var selValue = $("#singleSelectedTHSCODE").val();
            document.getElementById("FuclassCategory").value = selValue;
        });

        @* JQuery, joka suoritetaan aina, kun sivu latautuu *@
        @* Tarkistaa tuliko kontrollerilta tieto kirjautumisen epäonnistumisesta *@

        $(window).on('load', function () {
            if (@ViewBag.LoginError == 1) {
                $('#LoginRuutu').modal('show');
            }
        });

    </script>
}

@*modaalin login-ikkunan renderöinti*@
@*koska näkymällä on eri model alunperin käytössä, pitää sille välittää oikea model:*@
@{
    Html.RenderPartial("_LoginModal", new ReseptiHaku.Models.Logins());
}


<h2>Reseptihaku</h2>

<div class"input-group">
    <p class="px-1">@Html.Label("Hae reseptiä: ")<input name="reseptihaku" placeholder="Kirjoita tai valitse hakusanoja listalta"><a class="btn btn-primary">Hae!</a></p>
    <p class="px-1">@Html.Label("Valitut hakusanat:")</p>
    <p></p>
</div>

<h2>Raaka-aineet</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "foods", FormMethod.Get))
{
    <div class="input-group">
        <p class="px-1">@Html.Label("Hae raaka-aineen nimellä:")</p>
        <p class="px-1">@Html.TextBox("SearchString1", ViewBag.currentFilter1 as string, new { @class = "form-control" })</p>
        <p class="px-1">@Html.Label("Rajaa raaka-aineluokalla:")</p>
        <p class="px-1">@Html.Hidden("FuclassCategory", ViewBag.currentFilter1 as string, new { @id = "FuclassCategory", @class = "form-control" })</p> @*piilotettu kenttä, jolla tehdään *@
        <p class="px-1">@Html.DropDownList("THSCODE", null, htmlAttributes: new { @id = "singleSelectedTHSCODE", @class = "form-control" })</p>
        <p class="px-1"><input type="submit" value="Seach" class="form-control" /></p> @*kun haku painiketta klikataan, tapahtuu form submit ja haetaan tiedot uudestaan*@
    </div>
}


<table class="table">
    <tr>
        @*<th>@Html.DisplayNameFor(model => model.FOODNAME)</th>*@
        <th>@Html.ActionLink("Raaka-aine", "Index", new { sortOrder = ViewBag.RuokaNimiSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory })</th>
        @*<th>@Html.DisplayNameFor(model => model.EDPORT)</th>*@
        <th>@Html.ActionLink("Syötävä osuus (%)", "Index", new { sortOrder = ViewBag.SyotavaOsuusSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory }) </th>
        @*<th>@Html.DisplayNameFor(model => model.foodtype_FI.DESCRIPT)</th>*@
        <th>@Html.ActionLink("Elintarviketyyppi", "Index", new { sortOrder = ViewBag.ElintarviketyyppiSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory }) </th>
        @*<th>@Html.DisplayNameFor(model => model.fuclass_FI.DESCRIPT)</th>*@
        <th>@Html.ActionLink("Ruoankäyttöluokka", "Index", new { sortOrder = ViewBag.RuoanKayttoLuokkaSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory })</th>
        @*<th>@Html.DisplayNameFor(model => model.fuclass_FI1.DESCRIPT)</th>*@
        <th>@Html.ActionLink("Ruoankäyttöluokka, ylempi taso", "Index", new { sortOrder = ViewBag.RuoanKayttoLuokkaYSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory }) </th>
        @*<th>@Html.DisplayNameFor(model => model.igclass_FI.DESCRIPT)</th>*@
        <th>@Html.ActionLink("Raaka-aineluokka", "Index", new { sortOrder = ViewBag.RaakaAineLuokkaSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory })</th>
        @*<th>@Html.DisplayNameFor(model => model.igclass_FI1.DESCRIPT)</th>*@
        <th>@Html.ActionLink("Raaka-aineluokka, ylempi taso", "Index", new { sortOrder = ViewBag.RaakaAineLuokkaYSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory }) </th>
        @*<th>@Html.DisplayNameFor(model => model.process_FI.DESCRIPT)</th>*@
        <th>@Html.ActionLink("Valmistustapa", "Index", new { sortOrder = ViewBag.ValmistustapaSortParm, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory })</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.FOODNAME)</td>
            <td>@Html.DisplayFor(modelItem => item.EDPORT)</td>
            <td>@Html.DisplayFor(modelItem => item.foodtype_FI.DESCRIPT)</td>
            <td>@Html.DisplayFor(modelItem => item.fuclass_FI.DESCRIPT)</td>
            <td>@Html.DisplayFor(modelItem => item.fuclass_FI1.DESCRIPT)</td>
            <td>@Html.DisplayFor(modelItem => item.igclass_FI.DESCRIPT)</td>
            <td>@Html.DisplayFor(modelItem => item.igclass_FI1.DESCRIPT)</td>
            <td>@Html.DisplayFor(modelItem => item.process_FI.DESCRIPT)</td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.FOODID }) |
                @Html.ActionLink("Details", "Details", new { id = item.FOODID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.FOODID })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter1 = ViewBag.currentFilter1, currentFuclassCategory = ViewBag.currentFuclassCategory }))
